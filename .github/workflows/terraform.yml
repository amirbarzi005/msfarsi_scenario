name: Terraform CI/CD with Key Vault

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup-vault:
    runs-on: ubuntu-latest
    outputs:
      vault-name: kv-admin4-swc
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Key Vault and secrets
        id: create_vault
        run: |
          VAULT_NAME="myterraformvault$RANDOM"
          RESOURCE_GROUP="rg-abarzi-sch"
          LOCATION="eastus"
          echo "Vault name: $VAULT_NAME"
          az keyvault create --name $VAULT_NAME --resource-group $RESOURCE_GROUP --location $LOCATION
          az keyvault secret set --vault-name $VAULT_NAME --name "VMAdminUser" --value "${{ secrets.VM_ADMIN_USER }}"
          az keyvault secret set --vault-name $VAULT_NAME --name "VMAdminPassword" --value "${{ secrets.VM_ADMIN_PASSWORD }}"
          echo "vault-name=$VAULT_NAME" >> $GITHUB_OUTPUT

  terraform:
    needs: setup-vault
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      VAULT_NAME: ${{ needs.setup-vault.outputs.vault-name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.5"

      - name: Terraform Init
        run: terraform init
        working-directory: .

      - name: Terraform Plan
        run: terraform plan -var "key_vault_name=$VAULT_NAME" -out=tfplan
        working-directory: .

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan
        working-directory: .
